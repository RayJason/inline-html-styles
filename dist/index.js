import juice from"juice";import postcss from"postcss";import calc from"postcss-calc";const VARIABLE_DEFINITION_REGEX=/(--[\w-]+)\s*:\s*([^;]+);/g,VARIABLE_USAGE_REGEX=/var\((\s*--[a-zA-Z0-9-_]+\s*)(?:\)|,\s*(.*)\))/g,REM_UNIT_REGEX=/([\d.]+)rem/g,CLASS_ATTRIBUTE_REGEX=/ class="[^"]*"/g,handleCssVariables=e=>{const s=new Map;let r=e.replace(VARIABLE_DEFINITION_REGEX,((e,r,t)=>(s.set(r.trim(),t.trim()),""))),t=1e3;for(;VARIABLE_USAGE_REGEX.test(r)&&t>0;)t--,r=r.replace(VARIABLE_USAGE_REGEX,((e,r,t)=>{const E=r.trim();return s.get(E)||(null==t?void 0:t.trim())||""}));if(t<=0)throw new Error("Max Cycles for replacement exceeded");return r||""},inlineStyles=(e,s,r)=>{const{remToPx:t=!0,convertCssVariables:E=!0}=r||{};let c=s;t&&(c=s.replace(REM_UNIT_REGEX,((e,s)=>16*parseFloat(s)+"px")));let l=c;E&&(l=handleCssVariables(c));const a=postcss().use(calc({})).process(l).css;return juice(e,{extraCss:a}).replace(CLASS_ATTRIBUTE_REGEX,"")};export default inlineStyles;